OBJECT Codeunit 50002 Scheduling Extension
{
  OBJECT-PROPERTIES
  {
    Date=09.01.19;
    Time=14:56:22;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      JQSenderName@1100111000 : TextConst 'ENU=Dynamics NAV Scheduler';

      MailBodyTxt@1100111001 : TextConst
        '@@@="{Locked=""p style="",""font-family:"",""font-size"",""pt"",""<b>"",""</b>"",""</p>"",""<BR>"",""SMTP""} %1 is an email address, such as user@domain.com; %2 is the name of a mail server, such as mail.live.com; %3 is the TCP port number, such as 25; %4 is the authentication method, such as Basic Authentication; %5 is a boolean value, such as True; %6 is a numeric ID such as 12; %7 is the name identifier of a tenant of a Microsoft Dynamics NAV Server instance, such as ''MyTenant1'';"',
        'ENU="<p style=""font-family:Verdana,Arial;font-size:10pt"">

    <b>This mail message has been generated by the user %1 from Microsoft Dynamics NAV.</b>

    </p>

    <p style=""font-family:Verdana,Arial;font-size:9pt"">

    <b>Server Instance ID:</b> %2<br/>

    <b>Tenant ID:</b> %3<br/>

    <b>Company Name:</b> %4<br/>

    <b>Job Properties:</b> %5<br/>

    <b>Occured at:</b> %6<br/>

    <b>Error Message:</b> %7

    </p>"',
        'DES="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>Diese E-Mail-Nachricht wurde zu Testzwecken generiert vom Benutzer %1 von Microsoft Dynamics NAV.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Gesendet ber SMTP-Server:</b> %2<BR><b>SMTP-Port:</b> %3<BR><b>Authentifizierung:</b> %4<BR><b>Verwenden der sicheren Verbindung:</b> %5<BR><b>Serverinstanz-ID:</b> %6<BR><b>Tenant-ID:</b> %7</p>"',
        'ITS="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>Questo messaggio Š stato generato dall''utente %1 tramite Microsoft Dynamics NAV a scopo di verifica.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Inviato tramite server SMTP:</b> %2<BR><b>Porta SMTP:</b> %3<BR><b>Autenticazione:</b> %4<BR><b>Connessione protetta:</b> %5<BR><b>ID istanza server:</b> %6<BR><b>ID tenant:</b> %7</p>"',
        'FRS="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>Cet e-mail a ‚t‚ cr‚‚ par l''utilisateur %1 de Microsoft Dynamics NAV … des fins de test.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Envoy‚ via serveur SMTPÿ:</b> %2<BR><b>Port SMTPÿ:</b> %3<BR><b>Authentificationÿ:</b> %4<BR><b>Utilisation connexion s‚curis‚eÿ:</b> %5<BR><b>ID instance serveurÿ:</b> %6<BR><b>ID abonn‚ÿ:</b> %7</p>"';
      FailConnectorSubject@1100111002 : TextConst 'ENU=OGD connector error';
      FailSubject@1100111006 : TextConst 'ENU=Dynamics NAV Job Queue Error';
      StopSubject@1100111005 : TextConst 'ENU=Dynamics NAV Job Queue Error - NO ACTION TAKEN';
      ObjectProps@1100111004 : TextConst 'ENU=%1 (%2 %3)';
      ConnectorProps@1100111003 : TextConst 'ENU=%1 (%2)';

    LOCAL PROCEDURE SendEmailNotification@1100111001(JobQueueEntry@1100111000 : Record 472);
    VAR
      JobQueueLogEntry@1100111001 : Record 474;
    BEGIN
      JobQueueLogEntry.SETCURRENTKEY("Start Date/Time",ID);
      JobQueueLogEntry.SETRANGE(ID,JobQueueEntry.ID);
      JobQueueLogEntry.FINDLAST;
      JobQueueEntry.CALCFIELDS("Object Caption to Run");
      CASE TRUE OF
        (JobQueueEntry.Status = JobQueueEntry.Status::Ready) AND (JobQueueEntry."E-mail on Fail" <> ''):
          SendEmail(JobQueueEntry."E-mail on Fail",FailSubject,
                    STRSUBSTNO(ObjectProps,JobQueueEntry."Object Caption to Run",JobQueueEntry."Object Type to Run",JobQueueEntry."Object ID to Run"),
                    JobQueueLogEntry."Start Date/Time",JobQueueLogEntry."Error Message");
        (JobQueueEntry.Status = JobQueueEntry.Status::Error) AND (JobQueueEntry."E-mail on Stop" <> ''):
          SendEmail(JobQueueEntry."E-mail on Stop",StopSubject,
                    STRSUBSTNO(ObjectProps,JobQueueEntry."Object Caption to Run",JobQueueEntry."Object Type to Run",JobQueueEntry."Object ID to Run"),
                    JobQueueLogEntry."Start Date/Time",JobQueueLogEntry."Error Message");
      END;
    END;

    LOCAL PROCEDURE SendEmail@1100111004(EmailTo@1100111002 : Text;EmailSubject@1100111003 : Text;JobProperties@1100111004 : Text;OccuredAt@1100111006 : DateTime;ErrorMessage@1100111005 : Text);
    VAR
      SMTPMailSetup@1100111000 : Record 409;
      SMTPMail@1100111001 : Codeunit 400;
    BEGIN
      SMTPMailSetup.GET;
      SMTPMail.CreateMessage(
        JQSenderName,
        SMTPMailSetup."User ID",
        EmailTo,
        EmailSubject,
        STRSUBSTNO(MailBodyTxt,USERID,SERVICEINSTANCEID,TENANTID,COMPANYNAME,JobProperties,OccuredAt,ErrorMessage),
        TRUE);
      SMTPMail.Send;
    END;

    [EventSubscriber(Codeunit,448,OnAfterExecuteJobQueueEntry)]
    LOCAL PROCEDURE UpdateJobQueueEntryAfterExecution@1000000000(VAR JobQueueEntry@1100111000 : Record 472);
    BEGIN
      IF JobQueueEntry."Max No. of Errors" <> 0 THEN BEGIN
        CASE JobQueueEntry.Status OF
          JobQueueEntry.Status::Ready: BEGIN
            JobQueueEntry."No. of Errors" := 0;
            JobQueueEntry.MODIFY;
          END;
          JobQueueEntry.Status::Error: BEGIN
            JobQueueEntry."No. of Errors" += 1;
            IF JobQueueEntry."No. of Errors" < JobQueueEntry."Max No. of Errors" THEN
              JobQueueEntry.Status := JobQueueEntry.Status::Ready;
            JobQueueEntry.MODIFY;
            SendEmailNotification(JobQueueEntry);
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

